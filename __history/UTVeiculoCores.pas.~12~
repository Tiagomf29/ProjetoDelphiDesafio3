unit UTVeiculoCores;

interface

uses
  UTclassePadrao, UTcor, UTVeiculo, System.Generics.Collections;

type

  TVeiculoCores = class(TclassePadrao)

  private
    FVeiculo: TVeiculo;
    FCor: TCor;
    function getVeiculo: TVeiculo;
    procedure setVeiculo(const Value: TVeiculo);
    function getCor: TCor;
    procedure setCor(const Value: TCor);

  protected

  public
    property veiculo: TVeiculo read getVeiculo write setVeiculo;
    property cor: TCor read getCor write setCor;

    procedure insereVeiculoCores(veiculo: TVeiculoCores);
    procedure deletaVeiculoCores(veiculo: TVeiculoCores);

    function recuperaCoresVeiculo(Id :Integer): TObjectList<TCor>;

  end;

implementation
uses
    UdataModule;

{ TVeiculoCores }

procedure TVeiculoCores.deletaVeiculoCores(veiculo: TVeiculoCores);
begin

  qry.Connection := DM.conexao;

  qry.Close;
  qry.SQL.Clear;

  qry.SQL.Add('delete from veiculocores where veiculoid =:veiculoid and corid =:corid');
  qry.ParamByName('veiculoid').AsInteger := veiculo.veiculo.id;
  qry.ParamByName('corid').AsInteger := veiculo.cor.id;

  qry.ExecSQL;
end;

function TVeiculoCores.getCor: TCor;
begin
  Result := FCor;
end;

function TVeiculoCores.getVeiculo: TVeiculo;
begin
  Result := FVeiculo;
end;

procedure TVeiculoCores.insereVeiculoCores(veiculo: TVeiculoCores);
begin
  qry.Connection := DM.conexao;
  qry.Close;
  qry.SQL.Clear;
  qry.SQL.Add('insert into veiculocores values');
  qry.SQL.Add('(:veiculoid,:corid)');

  qry.ParamByName('veiculoid').AsInteger := veiculo.veiculo.id;
  qry.ParamByName('corid').AsInteger := veiculo.cor.id;

  qry.ExecSQL;

end;

function TVeiculoCores.recuperaCoresVeiculo(Id :Integer): TObjectList<TCor>;
var
lista : TObjectList<TCor>;

begin

  qry.Connection := DM.conexao;
  qry.Close;
  qry.SQL.Clear;
  qry.SQL.Add('select corid from veiculoCores ');
  qry.SQL.Add('where veiculoid =:veiculoId');

  qry.ParamByName('veiculoId').AsInteger := Id;

  qry.Open;

  while not qry.Eof do
  begin
    cor := TCor.create;
    cor.id := qry.FieldByName('corid').AsInteger;
    lista.Add(cor);
    qry.Next;
  end;

  Result := lista;
  
end;

procedure TVeiculoCores.setCor(const Value: TCor);
begin
  Self.FCor := Value;
end;

procedure TVeiculoCores.setVeiculo(const Value: TVeiculo);
begin
  Self.FVeiculo := Value;
end;

end.
